#pragma once
#include <sol/sol.hpp>
#include "../Enums.h"
#include "../Wrappers.h"
#define LUA_ENUM_TABLE_ENTRY(x) #x, x

namespace Lua {
	inline void InitEnums(sol::state& lua) {

		auto orderTable = lua.create_table_with(
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_NONE),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_MOVE_TO_POSITION),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_MOVE_TO_TARGET),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_ATTACK_MOVE),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_ATTACK_TARGET),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_CAST_POSITION),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_CAST_TARGET),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_CAST_TARGET_TREE),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_CAST_NO_TARGET),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_CAST_TOGGLE),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_HOLD_POSITION),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_TRAIN_ABILITY),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_DROP_ITEM),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_GIVE_ITEM),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_PICKUP_ITEM),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_PICKUP_RUNE),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_PURCHASE_ITEM),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_SELL_ITEM),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_DISASSEMBLE_ITEM),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_MOVE_ITEM),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_STOP),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_TAUNT),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_BUYBACK),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_GLYPH),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_CAST_RUNE),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_PING_ABILITY),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_MOVE_TO_DIRECTION),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_PATROL),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_RADAR),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_CONTINUE),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_CAST_RIVER_PAINT),
			LUA_ENUM_TABLE_ENTRY(DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT)
		);
		lua.create_named_table("Enum",
			"DotaUnitOrder", orderTable
		);
	}
	inline void InitClasses(sol::state& lua) {
		sol::usertype<BaseNpc> type_baseNpc = lua.new_usertype<BaseNpc>("BaseNPC");
		type_baseNpc["GetUnitName"] = &BaseNpc::GetUnitName;
	}
}